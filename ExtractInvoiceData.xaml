<Activity mc:Ignorable="sap sap2010" x:Class="ExtractInvoiceData" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:p="http://schemas.uipath.com/workflow/activities/intelligentocr" xmlns:p1="http://schemas.uipath.com/workflow/activities/ocr" xmlns:p2="http://schemas.uipath.com/workflow/activities/intelligentocr/classification" xmlns:p3="http://schemas.uipath.com/workflow/activities/document-processing-contracts/classification" xmlns:p4="http://schemas.uipath.com/workflow/activities/document-processing-contracts/dom" xmlns:p5="http://schemas.uipath.com/workflow/activities/intelligentocr/extraction" xmlns:p6="http://schemas.uipath.com/workflow/activities/document-processing-contracts/extraction" xmlns:p7="http://schemas.uipath.com/workflow/activities/document-processing-contracts/results" xmlns:p8="http://schemas.uipath.com/workflow/activities/document-processing-contracts/taxonomy" xmlns:s="clr-namespace:System;assembly=System.Private.CoreLib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=System.Private.CoreLib" xmlns:sd="clr-namespace:System.Drawing;assembly=System.Drawing.Common" xmlns:sd1="clr-namespace:System.Drawing;assembly=System.Drawing.Primitives" xmlns:sd2="clr-namespace:System.Data;assembly=System.Data.Common" xmlns:si="clr-namespace:System.IO;assembly=System.Private.CoreLib" xmlns:str="clr-namespace:System.Text.RegularExpressions;assembly=System.Text.RegularExpressions" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="out_resultFile" Type="OutArgument(x:String)" />
  </x:Members>
  <VisualBasic.Settings>
    <x:Null />
  </VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>929.6,3312.8</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>ExtractInvoiceData_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>UiPath.UIAutomationCore.Contracts</x:String>
      <x:String>System.Activities.Runtime.Collections</x:String>
      <x:String>UiPath.Platform.SyncObjects</x:String>
      <x:String>System.Linq.Expressions</x:String>
      <x:String>UiPath.DocumentProcessing.Contracts.Taxonomy</x:String>
      <x:String>UiPath.IntelligentOCR.Activities.Digitization</x:String>
      <x:String>UiPath.DocumentProcessing.Contracts.Dom</x:String>
      <x:String>UiPath.DocumentProcessing.Contracts.Results</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>System.Text.RegularExpressions</x:String>
      <x:String>UiPath.DataTableUtilities</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Vision.OCR</x:String>
      <x:String>UiPath.OCR.Contracts</x:String>
      <x:String>UiPath.DocumentProcessing.Contracts.Classification</x:String>
      <x:String>UiPath.DocumentProcessing.Contracts.DataExtraction</x:String>
      <x:String>UiPath.Shared.Activities.Business</x:String>
      <x:String>UiPath.IntelligentOCR.Activities.TaxonomyManagement</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>UiPath.IntelligentOCR.Activities.DocumentClassification</x:String>
      <x:String>UiPath.IntelligentOCR.Activities.DataExtraction</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>UiPath.OCR.Activities</x:String>
      <x:String>UiPath.OCR.Contracts.Activities</x:String>
      <x:String>UiPath.DocumentProcessing.Contracts.Training</x:String>
      <x:String>UiPath.DocumentProcessing.Contracts</x:String>
      <x:String>UiPath.IntelligentOCR.Activities.Training</x:String>
      <x:String>UiPath.SmartData.PositionBasedExtraction.Storage</x:String>
      <x:String>UiPath.IntelligentOCR.Activities.ValidationStation</x:String>
      <x:String>System.Numerics</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Drawing.Common</AssemblyReference>
      <AssemblyReference>System.Drawing.Primitives</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Net.Mail</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Linq.Expressions</AssemblyReference>
      <AssemblyReference>UiPath.DocumentProcessing.Contracts</AssemblyReference>
      <AssemblyReference>UiPath.IntelligentOCR.Activities</AssemblyReference>
      <AssemblyReference>System.ComponentModel.EventBasedAsync</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
      <AssemblyReference>System.Private.Xml</AssemblyReference>
      <AssemblyReference>System.Text.RegularExpressions</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Core</AssemblyReference>
      <AssemblyReference>UiPath.Vision.Core</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Contracts</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.DocumentUnderstanding.ML.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Testing.Activities</AssemblyReference>
      <AssemblyReference>UiPath.IntelligentOCR.StudioWeb.Activities</AssemblyReference>
      <AssemblyReference>UiPath.SmartData.PositionBasedExtraction</AssemblyReference>
      <AssemblyReference>System.Linq.Async</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>System.Collections.NonGeneric</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.Watcher</AssemblyReference>
      <AssemblyReference>System.IO.Packaging</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.AccessControl</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.DriveInfo</AssemblyReference>
      <AssemblyReference>System.Data.SqlClient</AssemblyReference>
      <AssemblyReference>System.Runtime.Numerics</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="Description: Extracts the required data from the PDF text that has been read and formats it into an Excel sheet" DisplayName="ExtractInvoiceData" sap:VirtualizedContainerService.HintSize="912.0000000000001,3692" sap2010:WorkflowViewState.IdRef="Sequence_7">
    <Sequence.Variables>
      <Variable x:TypeArguments="p8:DocumentTaxonomy" Name="taxonomy" />
      <Variable x:TypeArguments="x:String" Name="FilePath" />
      <Variable x:TypeArguments="x:String" Name="strDocumentText" />
      <Variable x:TypeArguments="p4:Document" Name="Dom" />
      <Variable x:TypeArguments="p7:ClassificationResult[]" Name="classificationResults" />
      <Variable x:TypeArguments="p7:ExtractionResult" Name="extractionResult" />
      <Variable x:TypeArguments="sd2:DataSet" Name="dataSet" />
      <Variable x:TypeArguments="scg:IEnumerable(str:Match)" Name="IEnBatchNo" />
      <Variable x:TypeArguments="scg:IEnumerable(str:Match)" Name="IEnExpirationDate" />
      <Variable x:TypeArguments="scg:IEnumerable(str:Match)" Name="IEnMfgDate" />
      <Variable x:TypeArguments="scg:IEnumerable(str:Match)" Name="IEnTemperatureConditions" />
      <Variable x:TypeArguments="sd2:DataTable" Name="dt_Items" />
      <Variable x:TypeArguments="x:Int32" Name="counter" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:LogMessage DisplayName="Start Workflow" sap:VirtualizedContainerService.HintSize="697.6,174.4" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="[UiPath.Core.Activities.LogLevel.Info]" Message="[&quot;ExtractInvoiceData Workflow Started....&quot;]" />
    <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="697.6,3297.6" sap2010:WorkflowViewState.IdRef="TryCatch_1">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <TryCatch.Try>
        <ui:RetryScope DisplayName="Retry Scope" sap:VirtualizedContainerService.HintSize="660.8,3011.2" sap2010:WorkflowViewState.IdRef="RetryScope_1" NumberOfRetries="3" RetryInterval="00:00:05">
          <ui:RetryScope.ActivityBody>
            <ActivityAction>
              <Sequence DisplayName="AppName_Action" sap:VirtualizedContainerService.HintSize="619.2,2835.2" sap2010:WorkflowViewState.IdRef="Sequence_21">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <Sequence DisplayName="Action" sap:VirtualizedContainerService.HintSize="585.6,2775.2" sap2010:WorkflowViewState.IdRef="Sequence_20">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:ForEachFileX sap2010:Annotation.AnnotationText="For each invoice extract all its data into xlsx file in the output folder" DisplayName="For Each Invoice in Attachment Folder" Folder="C:\Users\Mohamed\Documents\UiPath\DU_Project\Data\Input\Attachments" sap:VirtualizedContainerService.HintSize="552,2692" sap2010:WorkflowViewState.IdRef="ForEachFileX_1" IncludeSubDirectories="False" OrderBy="NameAscFirst" SkipFolderWithoutPermission="False">
                    <ui:ForEachFileX.Body>
                      <ActivityAction x:TypeArguments="si:FileInfo, x:Int32">
                        <ActivityAction.Argument1>
                          <DelegateInArgument x:TypeArguments="si:FileInfo" Name="CurrentFile" />
                        </ActivityAction.Argument1>
                        <ActivityAction.Argument2>
                          <DelegateInArgument x:TypeArguments="x:Int32" Name="CurrentIndex" />
                        </ActivityAction.Argument2>
                        <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="518.4,2372.8" sap2010:WorkflowViewState.IdRef="Sequence_4">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <Assign sap2010:Annotation.AnnotationText="Current invoice in the loop" DisplayName="Assign File Path" sap:VirtualizedContainerService.HintSize="484.8,144.8" sap2010:WorkflowViewState.IdRef="Assign_1">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[FilePath]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">[CurrentFile.FullName]</InArgument>
                            </Assign.Value>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </Assign>
                          <Sequence DisplayName="TAXONOMY" sap:VirtualizedContainerService.HintSize="484.8,56.8" sap2010:WorkflowViewState.IdRef="Sequence_5">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <p:LoadTaxonomy DisplayName="Load Taxonomy" sap:VirtualizedContainerService.HintSize="387.2,128.8" sap2010:WorkflowViewState.IdRef="LoadTaxonomy_1" Taxonomy="[taxonomy]" />
                          </Sequence>
                          <Sequence sap2010:Annotation.AnnotationText="Digitize the document and output a string text of its contents" DisplayName="DIGITIZATION" sap:VirtualizedContainerService.HintSize="484.8,88" sap2010:WorkflowViewState.IdRef="Sequence_6">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <p:DigitizeDocument ApplyOcrMigrated="True" ApplyOcrOnPdf="Auto" DegreeOfParallelism="-1" DetectCheckboxes="True" DisplayName="Digitize Current Document" DocumentObjectModel="[Dom]" DocumentPath="[FilePath]" DocumentText="[strDocumentText]" ForceApplyOCR="False" sap:VirtualizedContainerService.HintSize="387.2,323.2" sap2010:WorkflowViewState.IdRef="DigitizeDocument_1">
                              <p:DigitizeDocument.OCREngine>
                                <ActivityFunc x:TypeArguments="sd:Image, x:String, scg:IEnumerable(scg:KeyValuePair(sd1:Rectangle, x:String))" Argument1="{x:Reference __ReferenceID0}" Argument2="{x:Reference __ReferenceID1}">
                                  <p1:UiPathDocumentOCR Endpoint="{x:Null}" Output="{x:Null}" Text="{x:Null}" UseLocalServer="{x:Null}" ApiKey="t38ayQvfZTk2BOrPtAzyfsLiRy2ygVqwhjjr0tPLUAm+tj/8WNETZZgDrLf0yVr+4Qnx9XOm5cgOevOzq7TQcg==" ComputeSkewAngle="False" DisplayName="UiPath Document OCR" ExtractWords="True" sap:VirtualizedContainerService.HintSize="312,24.8" sap2010:WorkflowViewState.IdRef="UiPathDocumentOCR_1" Language="auto" NoopExecution="False" Profile="None" Scale="1" Timeout="100000">
                                    <p1:UiPathDocumentOCR.Image>
                                      <InArgument x:TypeArguments="sd:Image">
                                        <DelegateArgumentValue x:TypeArguments="sd:Image" sap2010:WorkflowViewState.IdRef="DelegateArgumentValue`1_1">
                                          <DelegateInArgument x:TypeArguments="sd:Image" x:Name="__ReferenceID0" Name="Image" />
                                        </DelegateArgumentValue>
                                      </InArgument>
                                    </p1:UiPathDocumentOCR.Image>
                                    <p1:UiPathDocumentOCR.PredictionId>
                                      <InArgument x:TypeArguments="x:String">
                                        <DelegateArgumentValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="DelegateArgumentValue`1_2">
                                          <DelegateInArgument x:TypeArguments="x:String" x:Name="__ReferenceID1" Name="PredictionId" />
                                        </DelegateArgumentValue>
                                      </InArgument>
                                    </p1:UiPathDocumentOCR.PredictionId>
                                  </p1:UiPathDocumentOCR>
                                </ActivityFunc>
                              </p:DigitizeDocument.OCREngine>
                            </p:DigitizeDocument>
                          </Sequence>
                          <Sequence sap2010:Annotation.AnnotationText="Classify the document" DisplayName="CLASSIFY" sap:VirtualizedContainerService.HintSize="484.8,88" sap2010:WorkflowViewState.IdRef="Sequence_8">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <p2:ClassifyDocumentScope ClassificationResults="[classificationResults]" DisplayName="Classify Document Scope" DocumentObjectModel="[DOM]" DocumentPath="[FilePath]" DocumentText="[strDocumentText]" sap:VirtualizedContainerService.HintSize="477.6,497.6" sap2010:WorkflowViewState.IdRef="ClassifyDocumentScope_1" Taxonomy="[taxonomy]" TaxonomyConfiguration="{}{&quot;TaxonomyMappings&quot;:{&quot;UIc0d45164195144599a4ed500d3e12e52&quot;:{&quot;DocumentTypeMappings&quot;:{&quot;NoGroup.NoCategory.Invoice&quot;:{&quot;OriginalDocumentTypeId&quot;:&quot;NoGroup.NoCategory.Invoice&quot;,&quot;ClassifierDocumentTypeId&quot;:null,&quot;IsDocumentTypeIdMapped&quot;:true}}}},&quot;ClassifierMinimumConfidence&quot;:{&quot;UIc0d45164195144599a4ed500d3e12e52&quot;:&quot;0&quot;},&quot;DocumentTypesByPersistenceId&quot;:{&quot;UIc0d45164195144599a4ed500d3e12e52&quot;:[]}}">
                              <p2:ClassifyDocumentScope.Classifiers>
                                <p2:KeywordBasedClassifier HumanValidatedData="{x:Null}" LearningData="{x:Null}" DisplayName="Keyword Based Classifier" sap:VirtualizedContainerService.HintSize="223.2,139.2" sap2010:WorkflowViewState.IdRef="KeywordBasedClassifier_1" LearningFilePath="DocumentProcessing\classifierLearning.json" PersistenceId="UIc0d45164195144599a4ed500d3e12e52">
                                  <p2:KeywordBasedClassifier.ClassifierResult>
                                    <OutArgument x:TypeArguments="p3:ClassifierResult">
                                      <DelegateArgumentReference x:TypeArguments="p3:ClassifierResult">
                                        <DelegateOutArgument x:TypeArguments="p3:ClassifierResult" Name="ClassifierResult" />
                                      </DelegateArgumentReference>
                                    </OutArgument>
                                  </p2:KeywordBasedClassifier.ClassifierResult>
                                  <p2:KeywordBasedClassifier.DocumentObjectModel>
                                    <InArgument x:TypeArguments="p4:Document">
                                      <DelegateArgumentValue x:TypeArguments="p4:Document">
                                        <DelegateInArgument x:TypeArguments="p4:Document" Name="DocumentObjectModel" />
                                      </DelegateArgumentValue>
                                    </InArgument>
                                  </p2:KeywordBasedClassifier.DocumentObjectModel>
                                  <p2:KeywordBasedClassifier.DocumentPath>
                                    <InArgument x:TypeArguments="x:String">
                                      <DelegateArgumentValue x:TypeArguments="x:String">
                                        <DelegateInArgument x:TypeArguments="x:String" Name="DocumentPath" />
                                      </DelegateArgumentValue>
                                    </InArgument>
                                  </p2:KeywordBasedClassifier.DocumentPath>
                                  <p2:KeywordBasedClassifier.DocumentText>
                                    <InArgument x:TypeArguments="x:String">
                                      <DelegateArgumentValue x:TypeArguments="x:String">
                                        <DelegateInArgument x:TypeArguments="x:String" Name="DocumentText" />
                                      </DelegateArgumentValue>
                                    </InArgument>
                                  </p2:KeywordBasedClassifier.DocumentText>
                                  <p2:KeywordBasedClassifier.DocumentTypes>
                                    <InArgument x:TypeArguments="p3:ClassifierDocumentType[]">
                                      <DelegateArgumentValue x:TypeArguments="p3:ClassifierDocumentType[]">
                                        <DelegateInArgument x:TypeArguments="p3:ClassifierDocumentType[]" Name="DocumentTypes" />
                                      </DelegateArgumentValue>
                                    </InArgument>
                                  </p2:KeywordBasedClassifier.DocumentTypes>
                                  <p2:KeywordBasedClassifier.PredictionId>
                                    <InArgument x:TypeArguments="x:String">
                                      <DelegateArgumentValue x:TypeArguments="x:String">
                                        <DelegateInArgument x:TypeArguments="x:String" Name="PredictionId" />
                                      </DelegateArgumentValue>
                                    </InArgument>
                                  </p2:KeywordBasedClassifier.PredictionId>
                                </p2:KeywordBasedClassifier>
                              </p2:ClassifyDocumentScope.Classifiers>
                            </p2:ClassifyDocumentScope>
                            <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="477.6,48" sap2010:WorkflowViewState.IdRef="CommentOut_1">
                              <ui:CommentOut.Body>
                                <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="416,481.6" sap2010:WorkflowViewState.IdRef="Sequence_13">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <p2:PresentClassificationStation AutomaticClassificationResults="[classificationResults]" DisplayName="Present Classification Station" DocumentObjectModel="[DOM]" DocumentPath="[FilePath]" DocumentText="[strDocumentText]" sap:VirtualizedContainerService.HintSize="353.6,395.2" sap2010:WorkflowViewState.IdRef="PresentClassificationStation_1" Taxonomy="[taxonomy]" ValidatedClassificationResults="[validateClassification]" />
                                </Sequence>
                              </ui:CommentOut.Body>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </ui:CommentOut>
                          </Sequence>
                          <Sequence DisplayName="EXTRACTION" sap:VirtualizedContainerService.HintSize="484.8,56.8" sap2010:WorkflowViewState.IdRef="Sequence_9">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <p5:DataExtractionScope DocumentTypeId="{x:Null}" ApplyGenerativeValidation="False" ClassificationResult="[classificationResults(0)]" DisplayName="Data Extraction Scope" DocumentObjectModel="[DOM]" DocumentPath="[FilePath]" DocumentText="[strDocumentText]" ExtractionResult="[extractionResult]" FormatValuesIfPossible="True" GenerativeValidationConfidenceThreshold="99" sap:VirtualizedContainerService.HintSize="632.8,522.4" sap2010:WorkflowViewState.IdRef="DataExtractionScope_1" Taxonomy="[taxonomy]" TaxonomyConfiguration="{}{&quot;TaxonomyMappings&quot;:{&quot;UI1bc5bd76e8ca401f9e1189c4d1f24644&quot;:{&quot;DocumentTypeMappings&quot;:{&quot;NoGroup.NoCategory.Invoice&quot;:{&quot;FieldMappings&quot;:{&quot;NoGroup.NoCategory.Invoice.CompanyName&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;NoGroup.NoCategory.Invoice.CompanyName&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true},&quot;NoGroup.NoCategory.Invoice.InvoiceNumber&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;NoGroup.NoCategory.Invoice.InvoiceNumber&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true},&quot;NoGroup.NoCategory.Invoice.Delivery&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;NoGroup.NoCategory.Invoice.Delivery&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true},&quot;NoGroup.NoCategory.Invoice.BillTo&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;NoGroup.NoCategory.Invoice.BillTo&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true},&quot;NoGroup.NoCategory.Invoice.ShipTo&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;NoGroup.NoCategory.Invoice.ShipTo&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true},&quot;NoGroup.NoCategory.Invoice.VATRegNumber&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;NoGroup.NoCategory.Invoice.VATRegNumber&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true},&quot;NoGroup.NoCategory.Invoice.TotalIncludeVAT&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;NoGroup.NoCategory.Invoice.TotalIncludeVAT&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true},&quot;NoGroup.NoCategory.Invoice.Table&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;NoGroup.NoCategory.Invoice.Table&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true},&quot;NoGroup.NoCategory.Invoice.Table.Material&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;NoGroup.NoCategory.Invoice.Table.Material&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true},&quot;NoGroup.NoCategory.Invoice.Table.Description&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;NoGroup.NoCategory.Invoice.Table.Description&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true},&quot;NoGroup.NoCategory.Invoice.Table.Qty&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;NoGroup.NoCategory.Invoice.Table.Qty&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true},&quot;NoGroup.NoCategory.Invoice.Table.UoM&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;NoGroup.NoCategory.Invoice.Table.UoM&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true},&quot;NoGroup.NoCategory.Invoice.Table.SalesPrice&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;NoGroup.NoCategory.Invoice.Table.SalesPrice&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true},&quot;NoGroup.NoCategory.Invoice.Table.Value&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;NoGroup.NoCategory.Invoice.Table.Value&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true},&quot;NoGroup.NoCategory.Invoice.Table.VAT%&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;NoGroup.NoCategory.Invoice.Table.VAT%&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true}},&quot;ExtractorDocumentTypeId&quot;:null}}},&quot;UId96a5f11172d49b3baac937fdbb781de&quot;:{&quot;DocumentTypeMappings&quot;:{&quot;NoGroup.NoCategory.Invoice&quot;:{&quot;FieldMappings&quot;:{&quot;NoGroup.NoCategory.Invoice.CompanyName&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;NoGroup.NoCategory.Invoice.CompanyName&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true},&quot;NoGroup.NoCategory.Invoice.InvoiceNumber&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;NoGroup.NoCategory.Invoice.InvoiceNumber&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true},&quot;NoGroup.NoCategory.Invoice.Delivery&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;NoGroup.NoCategory.Invoice.Delivery&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true},&quot;NoGroup.NoCategory.Invoice.BillTo&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;NoGroup.NoCategory.Invoice.BillTo&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true},&quot;NoGroup.NoCategory.Invoice.ShipTo&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;NoGroup.NoCategory.Invoice.ShipTo&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true},&quot;NoGroup.NoCategory.Invoice.VATRegNumber&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;NoGroup.NoCategory.Invoice.VATRegNumber&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true},&quot;NoGroup.NoCategory.Invoice.TotalIncludeVAT&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;NoGroup.NoCategory.Invoice.TotalIncludeVAT&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true},&quot;NoGroup.NoCategory.Invoice.Table&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;NoGroup.NoCategory.Invoice.Table&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true},&quot;NoGroup.NoCategory.Invoice.Table.Material&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;NoGroup.NoCategory.Invoice.Table.Material&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true},&quot;NoGroup.NoCategory.Invoice.Table.Description&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;NoGroup.NoCategory.Invoice.Table.Description&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true},&quot;NoGroup.NoCategory.Invoice.Table.Qty&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;NoGroup.NoCategory.Invoice.Table.Qty&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true},&quot;NoGroup.NoCategory.Invoice.Table.UoM&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;NoGroup.NoCategory.Invoice.Table.UoM&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true},&quot;NoGroup.NoCategory.Invoice.Table.SalesPrice&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;NoGroup.NoCategory.Invoice.Table.SalesPrice&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true},&quot;NoGroup.NoCategory.Invoice.Table.Value&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;NoGroup.NoCategory.Invoice.Table.Value&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true},&quot;NoGroup.NoCategory.Invoice.Table.VAT%&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;NoGroup.NoCategory.Invoice.Table.VAT%&quot;,&quot;ExtractorTaxonomyFieldId&quot;:null,&quot;ShouldExtract&quot;:true}},&quot;ExtractorDocumentTypeId&quot;:null}}}},&quot;ExtractorMinimumConfidence&quot;:{&quot;UId96a5f11172d49b3baac937fdbb781de&quot;:&quot;0&quot;,&quot;UI1bc5bd76e8ca401f9e1189c4d1f24644&quot;:&quot;0&quot;},&quot;ExtractorsAliases&quot;:{},&quot;DocumentTypeOptionsByExtractor&quot;:{&quot;UId96a5f11172d49b3baac937fdbb781de&quot;:[],&quot;UI1bc5bd76e8ca401f9e1189c4d1f24644&quot;:[]}}">
                              <p5:DataExtractionScope.Extractors>
                                <p5:RegexBasedExtractor Configuration="[&quot;[{&quot;&quot;DocumentTypeId&quot;&quot;:&quot;&quot;NoGroup.NoCategory.Invoice&quot;&quot;,&quot;&quot;FieldConfiguration&quot;&quot;:[{&quot;&quot;FieldId&quot;&quot;:&quot;&quot;NoGroup.NoCategory.Invoice.TotalIncludeVAT&quot;&quot;,&quot;&quot;Expression&quot;&quot;:&quot;&quot;EGP\\s+([\\d,]+\\.\\d*)&quot;&quot;,&quot;&quot;Options&quot;&quot;:1,&quot;&quot;Model&quot;&quot;:&quot;&quot;{\&quot;&quot;Parts\&quot;&quot;:[{\&quot;&quot;Capture\&quot;&quot;:false,\&quot;&quot;Index\&quot;&quot;:0,\&quot;&quot;OperationID\&quot;&quot;:\&quot;&quot;ADV\&quot;&quot;,\&quot;&quot;OperationName\&quot;&quot;:\&quot;&quot;Advanced\&quot;&quot;,\&quot;&quot;OperationValue\&quot;&quot;:\&quot;&quot;EGP\\\\s+([\\\\d,]+\\\\.\\\\d*)\&quot;&quot;,\&quot;&quot;QuantifierFirstValue\&quot;&quot;:\&quot;&quot;1\&quot;&quot;,\&quot;&quot;QuantifierID\&quot;&quot;:\&quot;&quot;EXT\&quot;&quot;,\&quot;&quot;QuantifierName\&quot;&quot;:\&quot;&quot;Exactly\&quot;&quot;,\&quot;&quot;QuantifierSecondValue\&quot;&quot;:null}],\&quot;&quot;Version\&quot;&quot;:2}&quot;&quot;}]}]&quot;]" DisplayName="Regex Based Extractor" sap:VirtualizedContainerService.HintSize="281.6,164" sap2010:WorkflowViewState.IdRef="RegexBasedExtractor_1" PersistenceId="UI1bc5bd76e8ca401f9e1189c4d1f24644" Timeout="2000" UseVisualAlignment="False">
                                  <p5:RegexBasedExtractor.DocumentBounds>
                                    <InArgument x:TypeArguments="p7:ResultsDocumentBounds">
                                      <DelegateArgumentValue x:TypeArguments="p7:ResultsDocumentBounds">
                                        <DelegateInArgument x:TypeArguments="p7:ResultsDocumentBounds" Name="DocumentBounds" />
                                      </DelegateArgumentValue>
                                    </InArgument>
                                  </p5:RegexBasedExtractor.DocumentBounds>
                                  <p5:RegexBasedExtractor.DocumentObjectModel>
                                    <InArgument x:TypeArguments="p4:Document">
                                      <DelegateArgumentValue x:TypeArguments="p4:Document">
                                        <DelegateInArgument x:TypeArguments="p4:Document" Name="DocumentObjectModel" />
                                      </DelegateArgumentValue>
                                    </InArgument>
                                  </p5:RegexBasedExtractor.DocumentObjectModel>
                                  <p5:RegexBasedExtractor.DocumentPath>
                                    <InArgument x:TypeArguments="x:String">
                                      <DelegateArgumentValue x:TypeArguments="x:String">
                                        <DelegateInArgument x:TypeArguments="x:String" Name="DocumentPath" />
                                      </DelegateArgumentValue>
                                    </InArgument>
                                  </p5:RegexBasedExtractor.DocumentPath>
                                  <p5:RegexBasedExtractor.DocumentText>
                                    <InArgument x:TypeArguments="x:String">
                                      <DelegateArgumentValue x:TypeArguments="x:String">
                                        <DelegateInArgument x:TypeArguments="x:String" Name="DocumentText" />
                                      </DelegateArgumentValue>
                                    </InArgument>
                                  </p5:RegexBasedExtractor.DocumentText>
                                  <p5:RegexBasedExtractor.ExtractorDocumentType>
                                    <InArgument x:TypeArguments="p6:ExtractorDocumentType">
                                      <DelegateArgumentValue x:TypeArguments="p6:ExtractorDocumentType">
                                        <DelegateInArgument x:TypeArguments="p6:ExtractorDocumentType" Name="ExtractorDocumentType" />
                                      </DelegateArgumentValue>
                                    </InArgument>
                                  </p5:RegexBasedExtractor.ExtractorDocumentType>
                                  <p5:RegexBasedExtractor.ExtractorResult>
                                    <OutArgument x:TypeArguments="p6:ExtractorResult">
                                      <DelegateArgumentReference x:TypeArguments="p6:ExtractorResult">
                                        <DelegateOutArgument x:TypeArguments="p6:ExtractorResult" Name="ExtractorResult" />
                                      </DelegateArgumentReference>
                                    </OutArgument>
                                  </p5:RegexBasedExtractor.ExtractorResult>
                                  <p5:RegexBasedExtractor.PredictionId>
                                    <InArgument x:TypeArguments="x:String">
                                      <DelegateArgumentValue x:TypeArguments="x:String">
                                        <DelegateInArgument x:TypeArguments="x:String" Name="PredictionId" />
                                      </DelegateArgumentValue>
                                    </InArgument>
                                  </p5:RegexBasedExtractor.PredictionId>
                                </p5:RegexBasedExtractor>
                                <p5:FormExtractor SerializedSignatureFields="{x:Null}" ApiKey="t38ayQvfZTk2BOrPtAzyfsLiRy2ygVqwhjjr0tPLUAm+tj/8WNETZZgDrLf0yVr+4Qnx9XOm5cgOevOzq7TQcg==" DisplayName="Form Extractor" Endpoint="https://du.uipath.com/svc/formextractor" sap:VirtualizedContainerService.HintSize="281.6,164" sap2010:WorkflowViewState.IdRef="FormExtractor_1" MinOverlapPercentage="65" PersistenceId="UId96a5f11172d49b3baac937fdbb781de" SendDocumentsForAlgorithmImprovements="True" SerializedSettings="{}{}" SerializedTemplates="[{&quot;DocumentTypeId&quot;:&quot;NoGroup.NoCategory.Invoice&quot;,&quot;FormId&quot;:&quot;1e47742e&quot;,&quot;FormName&quot;:&quot;Invoice&quot;,&quot;OriginalFileExtension&quot;:&quot;PDF&quot;,&quot;Pages&quot;:[{&quot;Page&quot;:0,&quot;Size&quot;:[0.0,0.0,595.0,842.0],&quot;SkewAngle&quot;:0.0,&quot;Evidence&quot;:[{&quot;Text&quot;:&quot;Page&quot;,&quot;Box&quot;:[23.81,28.35,19.15,11.15]},{&quot;Text&quot;:&quot;1&quot;,&quot;Box&quot;:[23.91,56.3,4.45,10.64]},{&quot;Text&quot;:&quot;Date:&quot;,&quot;Box&quot;:[46.46,28.35,19.99,11.15]},{&quot;Text&quot;:&quot;Invoice&quot;,&quot;Box&quot;:[17.71,208.6,48.22,19.52]},{&quot;Text&quot;:&quot;Your&quot;,&quot;Box&quot;:[46.46,172.3,18.26,11.15]},{&quot;Text&quot;:&quot;Order:&quot;,&quot;Box&quot;:[46.46,192.76,24.41,11.15]},{&quot;Text&quot;:&quot;Delivery:&quot;,&quot;Box&quot;:[82.46,172.3,33.74,11.15]},{&quot;Text&quot;:&quot;Bill&quot;,&quot;Box&quot;:[99.91,30.2,12.4,11.15]},{&quot;Text&quot;:&quot;-To:&quot;,&quot;Box&quot;:[99.91,44.8,15.1,11.15]},{&quot;Text&quot;:&quot;Ship-To:&quot;,&quot;Box&quot;:[99.91,329.25,32.46,11.15]},{&quot;Text&quot;:&quot;VAT&quot;,&quot;Box&quot;:[174.46,26.35,16.06,11.15]},{&quot;Text&quot;:&quot;Number:&quot;,&quot;Box&quot;:[174.46,93.46,32.91,11.15]}],&quot;Fields&quot;:[{&quot;Field&quot;:&quot;NoGroup.NoCategory.Invoice.CompanyName&quot;,&quot;Box&quot;:[40.3897,217.9935,153.8127,24.3445]},{&quot;Field&quot;:&quot;NoGroup.NoCategory.Invoice.CompanyName&quot;,&quot;Box&quot;:[58.648,165.9849,48.1356,12.7255]},{&quot;Field&quot;:&quot;NoGroup.NoCategory.Invoice.InvoiceNumber&quot;,&quot;Box&quot;:[68.0538,229.6125,101.2508,14.3854]},{&quot;Field&quot;:&quot;NoGroup.NoCategory.Invoice.Delivery&quot;,&quot;Box&quot;:[83.5457,206.9279,101.2508,18.2583]},{&quot;Field&quot;:&quot;NoGroup.NoCategory.Invoice.BillTo&quot;,&quot;Box&quot;:[95.1647,60.8611,44.8159,14.3854]},{&quot;Field&quot;:&quot;NoGroup.NoCategory.Invoice.BillTo&quot;,&quot;Box&quot;:[111.2099,23.7912,164.8783,38.1765]},{&quot;Field&quot;:&quot;NoGroup.NoCategory.Invoice.ShipTo&quot;,&quot;Box&quot;:[95.718,362.4004,45.3692,13.2788]},{&quot;Field&quot;:&quot;NoGroup.NoCategory.Invoice.ShipTo&quot;,&quot;Box&quot;:[110.1033,322.564,150.493,31.5371]},{&quot;Field&quot;:&quot;NoGroup.NoCategory.Invoice.VATRegNumber&quot;,&quot;Box&quot;:[170.9645,127.2551,101.2508,22.6846]}],&quot;Tables&quot;:[{&quot;FieldId&quot;:&quot;NoGroup.NoCategory.Invoice.Table&quot;,&quot;Headers&quot;:[{&quot;FieldId&quot;:&quot;NoGroup.NoCategory.Invoice.Table.Material&quot;,&quot;Box&quot;:[344.4814,18.291,49.3858,11.5843]},{&quot;FieldId&quot;:&quot;NoGroup.NoCategory.Invoice.Table.Description&quot;,&quot;Box&quot;:[344.4814,89.6261,54.2634,10.9746]},{&quot;FieldId&quot;:&quot;NoGroup.NoCategory.Invoice.Table.Qty&quot;,&quot;Box&quot;:[337.165,272.5366,24.9978,16.4619]},{&quot;FieldId&quot;:&quot;NoGroup.NoCategory.Invoice.Table.UoM&quot;,&quot;Box&quot;:[338.9941,305.4605,22.559,14.0231]},{&quot;FieldId&quot;:&quot;NoGroup.NoCategory.Invoice.Table.SalesPrice&quot;,&quot;Box&quot;:[337.7747,351.7978,65.2381,20.7299]},{&quot;FieldId&quot;:&quot;NoGroup.NoCategory.Invoice.Table.Value&quot;,&quot;Box&quot;:[326.8001,444.4725,45.7276,30.4851]},{&quot;FieldId&quot;:&quot;NoGroup.NoCategory.Invoice.Table.VAT%&quot;,&quot;Box&quot;:[330.4583,495.0777,29.8754,25.6075]}],&quot;Cells&quot;:[{&quot;Row&quot;:0,&quot;Column&quot;:0,&quot;Box&quot;:[365.821,16.4619,57.312,57.9217]},{&quot;Row&quot;:0,&quot;Column&quot;:1,&quot;Box&quot;:[362.8405,81.0368,180.3252,14.6012]},{&quot;Row&quot;:0,&quot;Column&quot;:2,&quot;Box&quot;:[360.6503,262.8221,43.8037,29.2025]},{&quot;Row&quot;:0,&quot;Column&quot;:3,&quot;Box&quot;:[363.3822,312.1672,28.0463,24.9978]},{&quot;Row&quot;:0,&quot;Column&quot;:4,&quot;Box&quot;:[359.1143,351.7978,63.409,35.9724]},{&quot;Row&quot;:0,&quot;Column&quot;:5,&quot;Box&quot;:[363.3822,435.9367,57.9217,40.85]},{&quot;Row&quot;:0,&quot;Column&quot;:6,&quot;Box&quot;:[365.2113,500.565,36.5821,42.6791]},{&quot;Row&quot;:1,&quot;Column&quot;:0,&quot;Box&quot;:[431.4663,13.8712,60.5951,29.2025]},{&quot;Row&quot;:1,&quot;Column&quot;:1,&quot;Box&quot;:[432.9264,86.8773,189.816,17.5215]},{&quot;Row&quot;:1,&quot;Column&quot;:2,&quot;Box&quot;:[432.9264,278.1534,30.6626,29.2025]},{&quot;Row&quot;:1,&quot;Column&quot;:3,&quot;Box&quot;:[435.1166,311.0061,32.8528,14.6012]},{&quot;Row&quot;:1,&quot;Column&quot;:4,&quot;Box&quot;:[430.7362,354.0798,62.0552,37.2331]},{&quot;Row&quot;:1,&quot;Column&quot;:5,&quot;Box&quot;:[431.4663,440.9571,51.1043,48.184]},{&quot;Row&quot;:1,&quot;Column&quot;:6,&quot;Box&quot;:[433.6564,500.8221,32.8528,21.1718]},{&quot;Row&quot;:2,&quot;Column&quot;:0,&quot;Box&quot;:[534.4049,19.7117,51.1043,20.4417]},{&quot;Row&quot;:2,&quot;Column&quot;:1,&quot;Box&quot;:[534.4049,83.227,186.8957,14.6012]},{&quot;Row&quot;:2,&quot;Column&quot;:2,&quot;Box&quot;:[532.2147,272.3129,35.773,32.8528]},{&quot;Row&quot;:2,&quot;Column&quot;:3,&quot;Box&quot;:[536.5951,310.2761,18.9816,13.8712]},{&quot;Row&quot;:2,&quot;Column&quot;:4,&quot;Box&quot;:[538.0552,350.4294,59.865,29.2025]},{&quot;Row&quot;:2,&quot;Column&quot;:5,&quot;Box&quot;:[536.5951,443.1472,51.1043,35.0429]},{&quot;Row&quot;:2,&quot;Column&quot;:6,&quot;Box&quot;:[535.865,501.5521,31.3926,13.8712]},{&quot;Row&quot;:3,&quot;Column&quot;:0,&quot;Box&quot;:[604.4908,23.362,45.9939,15.3313]},{&quot;Row&quot;:3,&quot;Column&quot;:1,&quot;Box&quot;:[607.411,88.3374,176.6748,10.9509]},{&quot;Row&quot;:3,&quot;Column&quot;:2,&quot;Box&quot;:[605.2209,267.9325,40.1534,26.2822]},{&quot;Row&quot;:3,&quot;Column&quot;:3,&quot;Box&quot;:[608.1411,311.7362,19.7117,11.681]},{&quot;Row&quot;:3,&quot;Column&quot;:4,&quot;Box&quot;:[604.4908,350.4294,64.2454,32.1227]},{&quot;Row&quot;:3,&quot;Column&quot;:5,&quot;Box&quot;:[603.7607,432.9264,60.5951,32.8528]},{&quot;Row&quot;:3,&quot;Column&quot;:6,&quot;Box&quot;:[602.3006,501.5521,29.2025,19.7117]}]}]},{&quot;Page&quot;:1,&quot;Size&quot;:[0.0,0.0,595.0,842.0],&quot;SkewAngle&quot;:0.0,&quot;Evidence&quot;:[{&quot;Text&quot;:&quot;Page&quot;,&quot;Box&quot;:[32.31,28.35,19.15,11.15]},{&quot;Text&quot;:&quot;2&quot;,&quot;Box&quot;:[32.41,56.3,4.45,10.64]},{&quot;Text&quot;:&quot;Invoice&quot;,&quot;Box&quot;:[26.21,208.6,48.22,19.52]},{&quot;Text&quot;:&quot;Material&quot;,&quot;Box&quot;:[204.36,28.35,30.14,11.15]},{&quot;Text&quot;:&quot;Description&quot;,&quot;Box&quot;:[204.36,92.4,44.01,11.15]},{&quot;Text&quot;:&quot;Qty&quot;,&quot;Box&quot;:[204.36,280.7,13.3,11.15]},{&quot;Text&quot;:&quot;UoM&quot;,&quot;Box&quot;:[204.36,308.6,17.35,11.15]},{&quot;Text&quot;:&quot;Sales&quot;,&quot;Box&quot;:[204.36,363.85,20.9,11.15]},{&quot;Text&quot;:&quot;Price&quot;,&quot;Box&quot;:[204.36,386.95,19.55,11.15]}],&quot;Fields&quot;:[{&quot;Field&quot;:&quot;NoGroup.NoCategory.Invoice.TotalIncludeVAT&quot;,&quot;Box&quot;:[476.0,431.4663,68.6258,16.0613]}],&quot;Tables&quot;:[{&quot;FieldId&quot;:&quot;NoGroup.NoCategory.Invoice.Table&quot;,&quot;Headers&quot;:[{&quot;FieldId&quot;:&quot;NoGroup.NoCategory.Invoice.Table.Material&quot;,&quot;Box&quot;:[0.0,0.0,0.0,0.0]},{&quot;FieldId&quot;:&quot;NoGroup.NoCategory.Invoice.Table.Description&quot;,&quot;Box&quot;:[0.0,0.0,0.0,0.0]},{&quot;FieldId&quot;:&quot;NoGroup.NoCategory.Invoice.Table.Qty&quot;,&quot;Box&quot;:[0.0,0.0,0.0,0.0]},{&quot;FieldId&quot;:&quot;NoGroup.NoCategory.Invoice.Table.UoM&quot;,&quot;Box&quot;:[0.0,0.0,0.0,0.0]},{&quot;FieldId&quot;:&quot;NoGroup.NoCategory.Invoice.Table.SalesPrice&quot;,&quot;Box&quot;:[0.0,0.0,0.0,0.0]},{&quot;FieldId&quot;:&quot;NoGroup.NoCategory.Invoice.Table.Value&quot;,&quot;Box&quot;:[0.0,0.0,0.0,0.0]},{&quot;FieldId&quot;:&quot;NoGroup.NoCategory.Invoice.Table.VAT%&quot;,&quot;Box&quot;:[0.0,0.0,0.0,0.0]}],&quot;Cells&quot;:[{&quot;Row&quot;:4,&quot;Column&quot;:0,&quot;Box&quot;:[217.5583,21.1718,52.5644,11.681]},{&quot;Row&quot;:4,&quot;Column&quot;:1,&quot;Box&quot;:[216.8282,86.1472,181.7853,8.7607]},{&quot;Row&quot;:4,&quot;Column&quot;:2,&quot;Box&quot;:[213.1779,270.8528,32.8528,25.5521]},{&quot;Row&quot;:4,&quot;Column&quot;:3,&quot;Box&quot;:[216.0982,305.8957,33.5828,13.8712]},{&quot;Row&quot;:4,&quot;Column&quot;:4,&quot;Box&quot;:[217.5583,351.1595,71.546,30.6626]},{&quot;Row&quot;:4,&quot;Column&quot;:5,&quot;Box&quot;:[217.5583,442.4172,59.135,32.1227]},{&quot;Row&quot;:4,&quot;Column&quot;:6,&quot;Box&quot;:[216.8282,504.4724,31.3926,15.3313]},{&quot;Row&quot;:5,&quot;Column&quot;:0,&quot;Box&quot;:[328.5276,20.4417,65.7055,15.3313]},{&quot;Row&quot;:5,&quot;Column&quot;:1,&quot;Box&quot;:[327.7975,89.0675,178.865,13.1411]},{&quot;Row&quot;:5,&quot;Column&quot;:2,&quot;Box&quot;:[328.5276,273.773,33.5828,25.5521]},{&quot;Row&quot;:5,&quot;Column&quot;:3,&quot;Box&quot;:[329.2577,311.7362,35.0429,16.0613]},{&quot;Row&quot;:5,&quot;Column&quot;:4,&quot;Box&quot;:[330.7178,352.6196,61.3252,29.2025]},{&quot;Row&quot;:5,&quot;Column&quot;:5,&quot;Box&quot;:[329.2577,441.6871,51.8344,31.3926]},{&quot;Row&quot;:5,&quot;Column&quot;:6,&quot;Box&quot;:[329.9877,504.4724,32.1227,17.5215]}]}]},{&quot;Page&quot;:2,&quot;Size&quot;:[0.0,0.0,595.0,842.0],&quot;SkewAngle&quot;:0.0,&quot;Evidence&quot;:[{&quot;Text&quot;:&quot;Page&quot;,&quot;Box&quot;:[32.31,28.35,19.15,11.15]},{&quot;Text&quot;:&quot;3&quot;,&quot;Box&quot;:[32.41,56.3,4.45,10.64]},{&quot;Text&quot;:&quot;Invoice&quot;,&quot;Box&quot;:[26.21,208.6,48.22,19.52]},{&quot;Text&quot;:&quot;1.&quot;,&quot;Box&quot;:[204.46,28.35,6.65,10.64]},{&quot;Text&quot;:&quot;2.&quot;,&quot;Box&quot;:[216.46,28.35,6.65,10.64]},{&quot;Text&quot;:&quot;3.&quot;,&quot;Box&quot;:[240.46,28.35,6.65,10.64]}],&quot;Fields&quot;:[],&quot;Tables&quot;:[]}],&quot;AnchorBasedConfiguration&quot;:{&quot;AnchorBasedFieldConfiguration&quot;:[]}}]" Timeout="100000">
                                  <p5:FormExtractor.DocumentBounds>
                                    <InArgument x:TypeArguments="p7:ResultsDocumentBounds">
                                      <DelegateArgumentValue x:TypeArguments="p7:ResultsDocumentBounds">
                                        <DelegateInArgument x:TypeArguments="p7:ResultsDocumentBounds" Name="DocumentBounds" />
                                      </DelegateArgumentValue>
                                    </InArgument>
                                  </p5:FormExtractor.DocumentBounds>
                                  <p5:FormExtractor.DocumentObjectModel>
                                    <InArgument x:TypeArguments="p4:Document">
                                      <DelegateArgumentValue x:TypeArguments="p4:Document">
                                        <DelegateInArgument x:TypeArguments="p4:Document" Name="DocumentObjectModel" />
                                      </DelegateArgumentValue>
                                    </InArgument>
                                  </p5:FormExtractor.DocumentObjectModel>
                                  <p5:FormExtractor.DocumentPath>
                                    <InArgument x:TypeArguments="x:String">
                                      <DelegateArgumentValue x:TypeArguments="x:String">
                                        <DelegateInArgument x:TypeArguments="x:String" Name="DocumentPath" />
                                      </DelegateArgumentValue>
                                    </InArgument>
                                  </p5:FormExtractor.DocumentPath>
                                  <p5:FormExtractor.DocumentText>
                                    <InArgument x:TypeArguments="x:String">
                                      <DelegateArgumentValue x:TypeArguments="x:String">
                                        <DelegateInArgument x:TypeArguments="x:String" Name="DocumentText" />
                                      </DelegateArgumentValue>
                                    </InArgument>
                                  </p5:FormExtractor.DocumentText>
                                  <p5:FormExtractor.ExtractorDocumentType>
                                    <InArgument x:TypeArguments="p6:ExtractorDocumentType">
                                      <DelegateArgumentValue x:TypeArguments="p6:ExtractorDocumentType">
                                        <DelegateInArgument x:TypeArguments="p6:ExtractorDocumentType" Name="ExtractorDocumentType" />
                                      </DelegateArgumentValue>
                                    </InArgument>
                                  </p5:FormExtractor.ExtractorDocumentType>
                                  <p5:FormExtractor.ExtractorResult>
                                    <OutArgument x:TypeArguments="p6:ExtractorResult">
                                      <DelegateArgumentReference x:TypeArguments="p6:ExtractorResult">
                                        <DelegateOutArgument x:TypeArguments="p6:ExtractorResult" Name="ExtractorResult" />
                                      </DelegateArgumentReference>
                                    </OutArgument>
                                  </p5:FormExtractor.ExtractorResult>
                                  <p5:FormExtractor.PredictionId>
                                    <InArgument x:TypeArguments="x:String">
                                      <DelegateArgumentValue x:TypeArguments="x:String">
                                        <DelegateInArgument x:TypeArguments="x:String" Name="PredictionId" />
                                      </DelegateArgumentValue>
                                    </InArgument>
                                  </p5:FormExtractor.PredictionId>
                                </p5:FormExtractor>
                              </p5:DataExtractionScope.Extractors>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </p5:DataExtractionScope>
                            <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="632.8,48" sap2010:WorkflowViewState.IdRef="CommentOut_2">
                              <ui:CommentOut.Body>
                                <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="416,481.6" sap2010:WorkflowViewState.IdRef="Sequence_14">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <p:PresentValidationStation FieldsValidationConfidence="{x:Null}" AutomaticExtractionResults="[extractionResult]" DisplayName="Present Validation Station" DocumentObjectModel="[DOM]" DocumentPath="[FilePath]" DocumentText="[strDocumentText]" sap:VirtualizedContainerService.HintSize="353.6,395.2" sap2010:WorkflowViewState.IdRef="PresentValidationStation_1" ShowOnlyRelevantPageRange="False" Taxonomy="[taxonomy]" ValidatedExtractionResults="[validationExtraction]" />
                                </Sequence>
                              </ui:CommentOut.Body>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </ui:CommentOut>
                          </Sequence>
                          <Sequence DisplayName="EXPORT EXTRACTION" sap:VirtualizedContainerService.HintSize="484.8,56.8" sap2010:WorkflowViewState.IdRef="Sequence_10">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <p5:ExportExtractionResults DataSet="[dataSet]" DisplayName="Export Extraction Results" ExtractionResult="[extractionResult]" sap:VirtualizedContainerService.HintSize="387.2,200" sap2010:WorkflowViewState.IdRef="ExportExtractionResults_1" IncludeConfidence="False" IncludeOCRConfidence="False" />
                          </Sequence>
                          <Sequence DisplayName="REGEX EXTRACTION" sap:VirtualizedContainerService.HintSize="484.8,56.8" sap2010:WorkflowViewState.IdRef="Sequence_11">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:Matches FirstMatch="{x:Null}" DisplayName="Find Matching Patterns - Batch_Nos" sap:VirtualizedContainerService.HintSize="387.2,92" sap2010:WorkflowViewState.IdRef="Matches_1" Input="[strDocumentText]" IsBuilderTabModified="False" Pattern="(?&lt;Batch_No&gt;\w+ \(\d+\))" RegexOption="IgnoreCase, Multiline, Compiled" Result="[IEnBatchNo]" />
                            <ui:Matches FirstMatch="{x:Null}" DisplayName="Find Matching Patterns - Expiration Dates" sap:VirtualizedContainerService.HintSize="387.2,92" sap2010:WorkflowViewState.IdRef="Matches_2" Input="[strDocumentText]" IsBuilderTabModified="False" Pattern="Expiration Date: (?&lt;Expiration_Date&gt;[\d\.]+)" RegexOption="IgnoreCase, Multiline, Compiled" Result="[IEnExpirationDate]" />
                            <ui:Matches FirstMatch="{x:Null}" DisplayName="Find Matching Patterns - Mfg Date" sap:VirtualizedContainerService.HintSize="387.2,92" sap2010:WorkflowViewState.IdRef="Matches_3" Input="[strDocumentText]" IsBuilderTabModified="False" Pattern="Mfg Date: (?&lt;Mfg_Date&gt;[\d\.]+)" RegexOption="IgnoreCase, Multiline, Compiled" Result="[IEnMfgDate]" />
                            <ui:Matches FirstMatch="{x:Null}" DisplayName="Find Matching Patterns - Mfg Date" sap:VirtualizedContainerService.HintSize="387.2,83.2" sap2010:WorkflowViewState.IdRef="Matches_4" Input="[strDocumentText]" IsBuilderTabModified="False" Pattern="Temperature Conditions: (?&lt;Temperature_Conditions&gt;[+\d°C to \d°C]+)\s+" RegexOption="IgnoreCase, Multiline, Compiled" Result="[IEnTemperatureConditions]" />
                          </Sequence>
                          <Sequence DisplayName="CONSOLIDATE ITEMS DATATABLE" sap:VirtualizedContainerService.HintSize="484.8,56.8" sap2010:WorkflowViewState.IdRef="Sequence_12">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:BuildDataTable DataTable="[dt_Items]" DisplayName="Build Items Data Table" sap:VirtualizedContainerService.HintSize="574.4,92" sap2010:WorkflowViewState.IdRef="BuildDataTable_1" TableInfo="&lt;NewDataSet&gt;&#xA;  &lt;xs:schema id=&quot;NewDataSet&quot; xmlns=&quot;&quot; xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:msdata=&quot;urn:schemas-microsoft-com:xml-msdata&quot;&gt;&#xA;    &lt;xs:element name=&quot;NewDataSet&quot; msdata:IsDataSet=&quot;true&quot; msdata:MainDataTable=&quot;TableName&quot; msdata:UseCurrentLocale=&quot;true&quot;&gt;&#xA;      &lt;xs:complexType&gt;&#xA;        &lt;xs:choice minOccurs=&quot;0&quot; maxOccurs=&quot;unbounded&quot;&gt;&#xA;          &lt;xs:element name=&quot;TableName&quot;&gt;&#xA;            &lt;xs:complexType&gt;&#xA;              &lt;xs:sequence&gt;&#xA;                &lt;xs:element name=&quot;Material&quot; msdata:Caption=&quot;&quot; minOccurs=&quot;0&quot;&gt;&#xA;                  &lt;xs:simpleType&gt;&#xA;                    &lt;xs:restriction base=&quot;xs:string&quot;&gt;&#xA;                      &lt;xs:maxLength value=&quot;100&quot; /&gt;&#xA;                    &lt;/xs:restriction&gt;&#xA;                  &lt;/xs:simpleType&gt;&#xA;                &lt;/xs:element&gt;&#xA;                &lt;xs:element name=&quot;Discount&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Qty&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;UoM&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Sales_x0020_Price&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Value&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;VAT_x0020__x0025_&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Batch_No&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Expiration_x0020_Date&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Mfg_x0020_Date&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Temperature_x0020_Conditions&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;              &lt;/xs:sequence&gt;&#xA;            &lt;/xs:complexType&gt;&#xA;          &lt;/xs:element&gt;&#xA;        &lt;/xs:choice&gt;&#xA;      &lt;/xs:complexType&gt;&#xA;    &lt;/xs:element&gt;&#xA;  &lt;/xs:schema&gt;&#xA;&lt;/NewDataSet&gt;" />
                            <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" DataTable="[dataSet.Tables(2)]" DisplayName="For Each Row in Data Table SET" sap:VirtualizedContainerService.HintSize="574.4,552" sap2010:WorkflowViewState.IdRef="ForEachRow_1">
                              <ui:ForEachRow.Body>
                                <ActivityAction x:TypeArguments="sd2:DataRow">
                                  <ActivityAction.Argument>
                                    <DelegateInArgument x:TypeArguments="sd2:DataRow" Name="CurrentRow" />
                                  </ActivityAction.Argument>
                                  <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="416,354.4" sap2010:WorkflowViewState.IdRef="Sequence_17">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{CurrentRow(&quot;Material&quot;).tostring,CurrentRow(&quot;Qty&quot;).tostring.Split(&quot; &quot;)(1).Trim,CurrentRow(&quot;Qty&quot;).tostring.Split(&quot; &quot;)(0).Trim,CurrentRow(&quot;UoM&quot;).tostring,CurrentRow(&quot;Sales Price&quot;).tostring,CurrentRow(&quot;Value&quot;).ToString,CurrentRow(&quot;VAT %&quot;).ToString}]" DataTable="[dt_Items]" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="353.6,220" sap2010:WorkflowViewState.IdRef="AddDataRow_1" />
                                    <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="353.6,48" sap2010:WorkflowViewState.IdRef="CommentOut_3">
                                      <ui:CommentOut.Body>
                                        <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="636.8,689.6" sap2010:WorkflowViewState.IdRef="Sequence_16">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" DataTable="[dt_Items]" DisplayName="For Each Row in Data Table" sap:VirtualizedContainerService.HintSize="574.4,603.2" sap2010:WorkflowViewState.IdRef="ForEachRow_2">
                                            <ui:ForEachRow.Body>
                                              <ActivityAction x:TypeArguments="sd2:DataRow">
                                                <ActivityAction.Argument>
                                                  <DelegateInArgument x:TypeArguments="sd2:DataRow" Name="CurrentItem" />
                                                </ActivityAction.Argument>
                                                <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="540.8,414.4" sap2010:WorkflowViewState.IdRef="Sequence_15">
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                  <ui:MultipleAssign DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="478.4,328" sap2010:WorkflowViewState.IdRef="MultipleAssign_1">
                                                    <ui:MultipleAssign.AssignOperations>
                                                      <scg:List x:TypeArguments="ui:AssignOperation" Capacity="8">
                                                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_1">
                                                          <ui:AssignOperation.To>
                                                            <OutArgument x:TypeArguments="x:Object">[CurrentItem("Material")]</OutArgument>
                                                          </ui:AssignOperation.To>
                                                          <ui:AssignOperation.Value>
                                                            <InArgument x:TypeArguments="x:Object">[CurrentRow("Material").tostring]</InArgument>
                                                          </ui:AssignOperation.Value>
                                                        </ui:AssignOperation>
                                                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_2">
                                                          <ui:AssignOperation.To>
                                                            <OutArgument x:TypeArguments="x:Object">[CurrentItem("Discount")]</OutArgument>
                                                          </ui:AssignOperation.To>
                                                          <ui:AssignOperation.Value>
                                                            <InArgument x:TypeArguments="x:String">[CurrentRow("Qty").tostring.Split(" ")(1).Trim]</InArgument>
                                                          </ui:AssignOperation.Value>
                                                        </ui:AssignOperation>
                                                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_3">
                                                          <ui:AssignOperation.To>
                                                            <OutArgument x:TypeArguments="x:Object">[CurrentItem("Qty")]</OutArgument>
                                                          </ui:AssignOperation.To>
                                                          <ui:AssignOperation.Value>
                                                            <InArgument x:TypeArguments="x:Object">[CurrentRow("Qty").tostring.Split(" ")(0).Trim]</InArgument>
                                                          </ui:AssignOperation.Value>
                                                        </ui:AssignOperation>
                                                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_4">
                                                          <ui:AssignOperation.To>
                                                            <OutArgument x:TypeArguments="x:Object">[CurrentItem("UoM")]</OutArgument>
                                                          </ui:AssignOperation.To>
                                                          <ui:AssignOperation.Value>
                                                            <InArgument x:TypeArguments="x:Object">[CurrentRow("UoM").tostring]</InArgument>
                                                          </ui:AssignOperation.Value>
                                                        </ui:AssignOperation>
                                                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_5">
                                                          <ui:AssignOperation.To>
                                                            <OutArgument x:TypeArguments="x:Object">[CurrentItem("Sales Price")]</OutArgument>
                                                          </ui:AssignOperation.To>
                                                          <ui:AssignOperation.Value>
                                                            <InArgument x:TypeArguments="x:Object">[CurrentRow("Sales Price").tostring]</InArgument>
                                                          </ui:AssignOperation.Value>
                                                        </ui:AssignOperation>
                                                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_6">
                                                          <ui:AssignOperation.To>
                                                            <OutArgument x:TypeArguments="x:Object">[CurrentItem("Value")]</OutArgument>
                                                          </ui:AssignOperation.To>
                                                          <ui:AssignOperation.Value>
                                                            <InArgument x:TypeArguments="x:Object">[CurrentRow("Value").ToString]</InArgument>
                                                          </ui:AssignOperation.Value>
                                                        </ui:AssignOperation>
                                                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_7">
                                                          <ui:AssignOperation.To>
                                                            <OutArgument x:TypeArguments="x:Object">[CurrentItem("VAT %")]</OutArgument>
                                                          </ui:AssignOperation.To>
                                                          <ui:AssignOperation.Value>
                                                            <InArgument x:TypeArguments="x:Object">[CurrentRow("VAT %").ToString]</InArgument>
                                                          </ui:AssignOperation.Value>
                                                        </ui:AssignOperation>
                                                      </scg:List>
                                                    </ui:MultipleAssign.AssignOperations>
                                                  </ui:MultipleAssign>
                                                </Sequence>
                                              </ActivityAction>
                                            </ui:ForEachRow.Body>
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                          </ui:ForEachRow>
                                        </Sequence>
                                      </ui:CommentOut.Body>
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </ui:CommentOut>
                                  </Sequence>
                                </ActivityAction>
                              </ui:ForEachRow.Body>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </ui:ForEachRow>
                            <Assign sap:VirtualizedContainerService.HintSize="574.4,113.6" sap2010:WorkflowViewState.IdRef="Assign_2">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:Int32">[counter]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:Int32">0</InArgument>
                              </Assign.Value>
                            </Assign>
                            <ui:InterruptibleWhile CurrentIndex="{x:Null}" Condition="[dt_Items.RowCount &gt; counter]" DisplayName="While" sap:VirtualizedContainerService.HintSize="574.4,571.2" sap2010:WorkflowViewState.IdRef="InterruptibleWhile_1">
                              <ui:InterruptibleWhile.Body>
                                <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="540.8,433.6" sap2010:WorkflowViewState.IdRef="Sequence_18">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <ui:MultipleAssign DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="478.4,242.4" sap2010:WorkflowViewState.IdRef="MultipleAssign_2">
                                    <ui:MultipleAssign.AssignOperations>
                                      <scg:List x:TypeArguments="ui:AssignOperation" Capacity="8">
                                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_8">
                                          <ui:AssignOperation.To>
                                            <OutArgument x:TypeArguments="x:Object">[dt_Items(counter)("Batch_No")]</OutArgument>
                                          </ui:AssignOperation.To>
                                          <ui:AssignOperation.Value>
                                            <InArgument x:TypeArguments="x:Object">[IEnBatchNo(counter).ToString.Trim]</InArgument>
                                          </ui:AssignOperation.Value>
                                        </ui:AssignOperation>
                                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_9">
                                          <ui:AssignOperation.To>
                                            <OutArgument x:TypeArguments="x:Object">[dt_Items(counter)("Expiration Date")]</OutArgument>
                                          </ui:AssignOperation.To>
                                          <ui:AssignOperation.Value>
                                            <InArgument x:TypeArguments="x:String">[IEnExpirationDate(counter).ToString.split(":")(1).trim]</InArgument>
                                          </ui:AssignOperation.Value>
                                        </ui:AssignOperation>
                                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_10">
                                          <ui:AssignOperation.To>
                                            <OutArgument x:TypeArguments="x:Object">[dt_Items(counter)("Mfg Date")]</OutArgument>
                                          </ui:AssignOperation.To>
                                          <ui:AssignOperation.Value>
                                            <InArgument x:TypeArguments="x:String">[IEnMfgDate(counter).ToString.split(":")(1).trim]</InArgument>
                                          </ui:AssignOperation.Value>
                                        </ui:AssignOperation>
                                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_11">
                                          <ui:AssignOperation.To>
                                            <OutArgument x:TypeArguments="x:Object">[dt_Items(counter)("Temperature Conditions")]</OutArgument>
                                          </ui:AssignOperation.To>
                                          <ui:AssignOperation.Value>
                                            <InArgument x:TypeArguments="x:String">[IEnTemperatureConditions(counter).ToString.split(":")(1).trim]</InArgument>
                                          </ui:AssignOperation.Value>
                                        </ui:AssignOperation>
                                      </scg:List>
                                    </ui:MultipleAssign.AssignOperations>
                                  </ui:MultipleAssign>
                                  <Assign sap:VirtualizedContainerService.HintSize="478.4,104.8" sap2010:WorkflowViewState.IdRef="Assign_3">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:Int32">[counter]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:Int32">[counter+1]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                </Sequence>
                              </ui:InterruptibleWhile.Body>
                            </ui:InterruptibleWhile>
                          </Sequence>
                          <Sequence sap2010:Annotation.AnnotationText="Write one excel file with the invoice name which contains two sheets one with the initial data and the other sheet contails all the table items and columns" DisplayName="WRITE TO EXCEL" sap:VirtualizedContainerService.HintSize="484.8,1708" sap2010:WorkflowViewState.IdRef="Sequence_19">
                            <Sequence.Variables>
                              <Variable x:TypeArguments="sd2:DataTable" Name="dtOrders" />
                              <Variable x:TypeArguments="sd2:DataTable" Name="dtFinal" />
                              <Variable x:TypeArguments="x:Int32" Name="intRowCount" />
                            </Sequence.Variables>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <Assign DisplayName="Assign | dtFinal" sap:VirtualizedContainerService.HintSize="451.2,113.6" sap2010:WorkflowViewState.IdRef="Assign_5">
                              <Assign.To>
                                <OutArgument x:TypeArguments="sd2:DataTable">[dtFinal]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="sd2:DataTable">[dataSet.Tables(0)]</InArgument>
                              </Assign.Value>
                            </Assign>
                            <ui:RemoveDataColumn Column="{x:Null}" ColumnIndex="{x:Null}" ColumnName="table" DataTable="[dtFinal]" DisplayName="Remove Data Column" sap:VirtualizedContainerService.HintSize="451.2,220" sap2010:WorkflowViewState.IdRef="RemoveDataColumn_1" />
                            <Assign DisplayName="Assign | dtOrders" sap:VirtualizedContainerService.HintSize="451.2,113.6" sap2010:WorkflowViewState.IdRef="Assign_6">
                              <Assign.To>
                                <OutArgument x:TypeArguments="sd2:DataTable">[dtOrders]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="sd2:DataTable">[dataSet.Tables(0).Clone]</InArgument>
                              </Assign.Value>
                            </Assign>
                            <ui:WriteRange StartingCell="{x:Null}" AddHeaders="True" DataTable="[dtFinal]" DisplayName="Write Main Data Sheet Workbook" sap:VirtualizedContainerService.HintSize="451.2,148" sap2010:WorkflowViewState.IdRef="WriteRange_3" SheetName="Main Data" WorkbookPath="[&quot;Data\Output\&quot;+CurrentFile.Name +&quot;Extracted.xlsx&quot;]" />
                            <Assign DisplayName="Assign DT1 Row Count" sap:VirtualizedContainerService.HintSize="451.2,113.6" sap2010:WorkflowViewState.IdRef="Assign_7">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:Int32">[intRowCount]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:Int32">[dtFinal.Rows.Count + 4]</InArgument>
                              </Assign.Value>
                            </Assign>
                            <ui:WriteRange AddHeaders="True" DataTable="[dt_Items]" DisplayName="Write Main Data Sheet Workbook" sap:VirtualizedContainerService.HintSize="451.2,148" sap2010:WorkflowViewState.IdRef="WriteRange_4" SheetName="Main Data" StartingCell="[&quot;A&quot; + intRowCount.ToString]" WorkbookPath="[&quot;Data\Output\&quot;+CurrentFile.Name +&quot;Extracted.xlsx&quot;]" />
                            <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="451.2,309.6" sap2010:WorkflowViewState.IdRef="CommentOut_4">
                              <ui:CommentOut.Body>
                                <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="416,199.2" sap2010:WorkflowViewState.IdRef="Sequence_24">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <ui:WriteRange StartingCell="{x:Null}" AddHeaders="True" DataTable="[dataSet.Tables(0)]" DisplayName="Write Main Data Sheet Workbook" sap:VirtualizedContainerService.HintSize="382.4,139.2" sap2010:WorkflowViewState.IdRef="WriteRange_1" SheetName="Main Data" WorkbookPath="[&quot;Data\Output\&quot;+CurrentFile.Name +&quot;Extracted.xlsx&quot;]" />
                                </Sequence>
                              </ui:CommentOut.Body>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </ui:CommentOut>
                            <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="451.2,309.6" sap2010:WorkflowViewState.IdRef="CommentOut_5">
                              <ui:CommentOut.Body>
                                <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="416,199.2" sap2010:WorkflowViewState.IdRef="Sequence_25">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <ui:WriteRange StartingCell="{x:Null}" AddHeaders="True" DataTable="[dt_Items]" DisplayName="Write Items Table Workbook" sap:VirtualizedContainerService.HintSize="382.4,139.2" sap2010:WorkflowViewState.IdRef="WriteRange_2" SheetName="Items" WorkbookPath="[&quot;Data\Output\&quot;+CurrentFile.Name +&quot;Extracted.xlsx&quot;]" />
                                </Sequence>
                              </ui:CommentOut.Body>
                            </ui:CommentOut>
                            <Assign sap:VirtualizedContainerService.HintSize="451.2,104.8" sap2010:WorkflowViewState.IdRef="Assign_4">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">[out_resultFile]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">["Data\Output\"+CurrentFile.Name +"Extracted.xlsx"]</InArgument>
                              </Assign.Value>
                            </Assign>
                          </Sequence>
                        </Sequence>
                      </ActivityAction>
                    </ui:ForEachFileX.Body>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:ForEachFileX>
                </Sequence>
              </Sequence>
            </ActivityAction>
          </ui:RetryScope.ActivityBody>
          <ui:RetryScope.Condition>
            <ActivityFunc x:TypeArguments="x:Boolean" />
          </ui:RetryScope.Condition>
        </ui:RetryScope>
      </TryCatch.Try>
      <TryCatch.Catches>
        <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="664,23.2" sap2010:WorkflowViewState.IdRef="Catch`1_1">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ActivityAction x:TypeArguments="s:Exception">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
            </ActivityAction.Argument>
            <Sequence DisplayName="Rethrow SE" sap:VirtualizedContainerService.HintSize="416,56.8" sap2010:WorkflowViewState.IdRef="Sequence_22">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:LogMessage DisplayName="Log SE Message" sap:VirtualizedContainerService.HintSize="388.5283018867924,136.75471698113208" sap2010:WorkflowViewState.IdRef="LogMessage_6" Level="[UiPath.Core.Activities.LogLevel.Error]" Message="[&quot;SE: &quot;+ exception.Message]" />
              <Rethrow DisplayName="Rethrow SE" sap:VirtualizedContainerService.HintSize="388.5283018867924,25.358490566037734" sap2010:WorkflowViewState.IdRef="Rethrow_2" />
            </Sequence>
          </ActivityAction>
        </Catch>
        <Catch x:TypeArguments="ui:BusinessRuleException" sap:VirtualizedContainerService.HintSize="664,23.2" sap2010:WorkflowViewState.IdRef="Catch`1_2">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ActivityAction x:TypeArguments="ui:BusinessRuleException">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="ui:BusinessRuleException" Name="exception" />
            </ActivityAction.Argument>
            <Sequence DisplayName="Rethrow BE" sap:VirtualizedContainerService.HintSize="422.4,282.4" sap2010:WorkflowViewState.IdRef="Sequence_23">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:LogMessage DisplayName="Log BE Message" sap:VirtualizedContainerService.HintSize="388.8,174.4" sap2010:WorkflowViewState.IdRef="LogMessage_3" Level="[UiPath.Core.Activities.LogLevel.Error]" Message="[&quot;BE: &quot;+ exception.Message]" />
              <Rethrow DisplayName="Rethrow BE" sap:VirtualizedContainerService.HintSize="388.8,48" sap2010:WorkflowViewState.IdRef="Rethrow_1" />
            </Sequence>
          </ActivityAction>
        </Catch>
      </TryCatch.Catches>
    </TryCatch>
    <ui:LogMessage DisplayName="End Workflow" sap:VirtualizedContainerService.HintSize="697.6,165.6" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="[UiPath.Core.Activities.LogLevel.Info]" Message="[&quot;ExtractInvoiceData Workflow Ended....&quot;]" />
  </Sequence>
</Activity>